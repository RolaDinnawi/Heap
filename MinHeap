public class MinHeap {

    Node root;

    public MinHeap(Node root){
        this.root = root;
    }

    private int size(Node root) {
        if (root == null) {
            return 0;
        }
        return 1 + size(root.left) + size(root.right);
    }

    private boolean isHeap(Node root, int i, int n) {
        //write your code here
        if (root == null)
            return true;
        else if (root.left == null && root.right == null)
            return true;
        else if ((root.left != null && root.left.data < root.data) || (root.right != null && root.right.data < root.data))
            return false;
        else 
            return isHeap(root.left, i, size(root.left)) && isHeap(root.right, i, size(root.right));
    }

    public boolean isHeap(Node root) {
        int i = 0;
        return isHeap(root, i, size(root));
    }

    public static void main(String[] args) {
        /*
         * Construct the following tree
         *          2
         *      /       \
         *     3         4
         *   /   \     /   \
         *  5     6   8    10
         */

         Node root = new Node(2);
         root.left = new Node(3);
         root.right = new Node(4);
         root.left.left = new Node(5);
         root.left.right = new Node(6);
         root.right.left = new Node(8);
         root.right.right = new Node(10);
 
         MinHeap mh = new MinHeap(root);
 
         if (mh.isHeap(root)) {
             System.out.println("The given binary tree is a min-heap");
         } else {
             System.out.println("The given binary tree is not a min-heap");
         }


         /*
         * Construct the following tree
         *          2
         *      /       \
         *     11        4
         *   /   \     /   \
         *  5     6   8    10
         */

         Node root1 = new Node(2);
         root1.left = new Node(11);
         root1.right = new Node(4);
         root1.left.left = new Node(5);
         root1.left.right = new Node(6);
         root1.right.left = new Node(8);
         root1.right.right = new Node(10);
 
         MinHeap mh1 = new MinHeap(root1);
 
         if (mh1.isHeap(root1)) {
             System.out.println("The given binary tree is a min-heap");
         } else {
             System.out.println("The given binary tree is not a min-heap");
         }
    }
}
